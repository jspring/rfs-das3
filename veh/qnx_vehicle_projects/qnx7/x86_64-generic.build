[image=0x1400000]
#---------------------------------------------------------------------------------------------------
# x86 64bits build for generic x86 platform
#---------------------------------------------------------------------------------------------------
[virtual=x86_64,bios +compress] boot = {
	startup-x86 -v
	PATH=/sbin:/usr/sbin:/bin:/usr/bin:/proc/boot:/x86_64/sbin:/x86_64/usr/sbin:/x86_64/bin:/x86_64/usr/bin:x86_64/usr/local/bin LD_LIBRARY_PATH=/proc/boot:/lib:/usr/lib:/lib/dll:/lib/dll/pci:/x86_64/lib:/x86_64/usr/lib:/x86_64/lib/dll procnto-smp-instr -v
}

[+script] startup-script = {
	procmgr_symlink ../../proc/boot/libc.so /usr/lib/ldqnx-64.so.2

	# For x86 32bits compatibility (this feature is experimental!)
#	procmgr_symlink ../../x86/lib/libc.so /usr/lib/ldqnx.so.2

	display_msg Welcome to QNX Neutrino SDP 7.0 on x86_64 system

#---------------------------------------------------------------------------------------------------
# Starting slogger2 server
#---------------------------------------------------------------------------------------------------
	display_msg "Starting slogger2 server ..."
	slogger2 -s2048k &
	waitfor /dev/slog2

#---------------------------------------------------------------------------------------------------
        display_msg "Starting random data service..."
        random -t -p -l devr-drng.so

#---------------------------------------------------------------------------------------------------
# Settings env for PCI server and starting PCI server
#---------------------------------------------------------------------------------------------------
	PCI_HW_MODULE=/lib/dll/pci/pci_hw-Intel_x86.so						## uncomment this line for Intel platform, comment out for other platform
#	PCI_HW_MODULE=/lib/dll/pci/pci_hw-AMD_x86.so						## uncomment this line for AMD platform, comment out for other platform
	PCI_SLOG_MODULE=/lib/dll/pci/pci_slog2.so
	PCI_DEBUG_MODULE=/lib/dll/pci/pci_debug2.so
	PCI_BASE_VERBOSITY=3
#	PCI_HW_CONFIG_FILE=/etc/system/config/pci/pci_hw-VMware.cfg			## uncomment this line for VMWare image, comment out for other platform

#---------------------------------------------------------------------------------------------------
	display_msg "Starting PCI server ..."
	pci-server --aspace-enable

# Note: Specify the highest bus to be scanned during enumeration as below. See also pci-server 'use' information
#	pci-server --bus-scan-limit=16 --aspace-enable

	waitfor /dev/pci

#---------------------------------------------------------------------------------------------------
# Get the disk up and running
#---------------------------------------------------------------------------------------------------
	sh /proc/boot/blk-start.sh

#---------------------------------------------------------------------------------------------------
# Note:
#  If there is a /x86_64 filesystem in hard disk, Please uncomment the line below,
#  further commands can now be run from the filesystem in hard disk.
#---------------------------------------------------------------------------------------------------
#	waitfor /x86_64

#---------------------------------------------------------------------------------------------------
# Starting common services
#---------------------------------------------------------------------------------------------------
	display_msg "Starting some common services ..."
	dumper
	pipe
	mqueue
	devc-pty

#---------------------------------------------------------------------------------------------------
# Starting network driver and services
#---------------------------------------------------------------------------------------------------
	sh /proc/boot/net-start.sh
	display_msg "Starting can_dual"
	sh /proc/boot/net-config.sh

#---------------------------------------------------------------------------------------------------
# Starting USB host driver and services
#---------------------------------------------------------------------------------------------------
	display_msg "Starting USB host ..."
	io-usb-otg -d xhci -d ehci -d ohci -d uhci
	waitfor /dev/usb/io-usb-otg

	display_msg "Starting devb-umass ..."
	devb-umass cam pnp &

#---------------------------------------------------------------------------------------------------
# Starting audio driver
#---------------------------------------------------------------------------------------------------
	sh /proc/boot/aud-start.sh

#---------------------------------------------------------------------------------------------------
# Starting Input services
#---------------------------------------------------------------------------------------------------
	display_msg "Starting input services ..."
	io-hid -d usb
	waitfor /dev/io-hid/io-hid

#---------------------------------------------------------------------------------------------------
# Starting serial driver
#---------------------------------------------------------------------------------------------------
	display_msg "Starting serial driver ..."
	devc-ser8250 -e -b38400
	waitfor /dev/ser1

# Note: If need a serial debug port, please uncomment the line below
#       Please change the device name to the actull debug port name
#	TERM=qansi on -t /dev/ser1 /bin/sh

# Note: If need a USB-serial debug port, please uncomment the line below
#		Please make sure the USB driver has been lauched first and you have the USB-serial device connected
#	display_msg "Starting serial USB driver ..."
#	devc-serusb -e -b115200 -d path=/dev/usb/io-usb-otg
#	waitfor /dev/serusb1
#	TERM=qansi on -t /dev/serusb1 /bin/sh
	display_msg "Starting sshd"
	sh /etc/rc.d/rc.local
#---------------------------------------------------------------------------------------------------
# Starting consoles and shells
#---------------------------------------------------------------------------------------------------
	display_msg "Starting consoles ..."
	devc-con-hid -n8
	waitfor /dev/con1
	waitfor /dev/con2
	waitfor /dev/con3
	waitfor /dev/con4



#---------------------------------------------------------------------------------------------------
	display_msg "Starting shells ..."
	SYSNAME=nto
	TERM=qansi

	reopen /dev/con2
	[+session] sh &

	reopen /dev/con3
	[+session] sh &

	reopen /dev/con4
	[+session] sh &

	reopen /dev/con1
	[+session] sh
}

[type=dir] /var/chroot
[type=dir] /var/chroot/sshd
[type=dir] /etc/ssh
[type=dir] /usr/local/bin

[type=link] /bin/sh=/proc/boot/ksh
[type=link] /bin/stty=/proc/boot/stty
[type=link] /tmp=/dev/shmem
[type=link] /var/run=/dev/shmem
[type=link] /var/db=/dev/shmem
[type=link] /usr/bin/ssh=/proc/boot/ssh
[type=link] /usr/bin/scp=/proc/boot/scp
[type=link] /usr/bin/vi=/proc/boot/elvis
[type=link] /usr/bin/gpssetdate=/proc/boot/gpssetdate


#---------------------------------------------------------------------------------------------------
# shared library
#---------------------------------------------------------------------------------------------------
libc.so
libncursesw.so
libpanelw.so
libdevice-publisher.so

#---------------------------------------------------------------------------------------------------
# libraries for new PCI driver
#---------------------------------------------------------------------------------------------------
libpci.so
[-followlink search=${QNX_TARGET}/${PROCESSOR}] /lib/dll/pci/=lib/dll/pci

#---------------------------------------------------------------------------------------------------
# libraries for block drivers
#---------------------------------------------------------------------------------------------------
io-blk.so
libcam.so
fs-qnx6.so
fs-dos.so
cam-disk.so
cam-cdrom.so

#---------------------------------------------------------------------------------------------------
# Note:
#   If there is a filesystem (/x86_64) that include the libariries list below
#   (before the line [data=copy]), you could comment them out to reduces the size of IFS images.
#---------------------------------------------------------------------------------------------------

#---------------------------------------------------------------------------------------------------
# more shared libraries
#---------------------------------------------------------------------------------------------------
libm.so
libz.so
libslog2.so
libslog2parse.so
libtracelog.so
libpps.so
libbacktrace.so
libc++.so
libstdc++.so.6
#libsocket.so.3
libsocket.so.2
libqdb.so.1

#---------------------------------------------------------------------------------------------------
# libraries for USB drivers
#---------------------------------------------------------------------------------------------------
libusbdi.so
libhiddi.so
devu-hcd-ehci.so
devu-hcd-ohci.so
devu-hcd-uhci.so
devu-hcd-xhci.so

#---------------------------------------------------------------------------------------------------
# libraries for Audio drivers
#---------------------------------------------------------------------------------------------------
deva-ctrl-intel_hda.so
deva-mixer-hda.so
deva-ctrl-audiopci.so
deva-mixer-ac97.so
libasound.so

#---------------------------------------------------------------------------------------------------
# libraries for io-hid drivers
#---------------------------------------------------------------------------------------------------
devh-usb.so
devh-ps2ser.so

#---------------------------------------------------------------------------------------------------
# libraries for network drivers
#---------------------------------------------------------------------------------------------------
libsocket.so
devnp-e1000.so
devnp-rtl8169.so
libcrypto.so
libqdb.so.1

#---------------------------------------------------------------------------------------------------
# Entropy library for random that supports the RDSEED and RDRAND instructions
#---------------------------------------------------------------------------------------------------
devr-drng.so


[data=copy]


#---------------------------------------------------------------------------------------------------
# script for launching the network driver
#---------------------------------------------------------------------------------------------------
net-start.sh={
#!/bin/sh

PCI_DEVICE_LIST=/dev/shmem/pci_device.list
STD_NULL=/dev/null

# supported list for the network devices
INTEL_8086_100f=8086/100f
INTEL_8086_1559=8086/1559
INTEL_8086_1570=8086/1570
INTEL_8086_15a3=8086/15a3
INTEL_8086_15a2=8086/15a2
INTEL_8086_1502=8086/1502
INTEL_8086_1503=8086/1503
INTEL_8086_1f41=8086/1f41
INTEL_8086_10d3=8086/10d3
RTL_RTL8169=10ec/8168

# uncomment the line below if any driver use the old PCI API's
export PCI_BKWD_COMPAT_MODULE=/lib/dll/pci/pci_bkwd_compat.so

#check if there is the pci device list
if [ ! -r $PCI_DEVICE_LIST ]; then
	echo "Get PCI device list ..."
	pci-tool -v > $PCI_DEVICE_LIST
fi

#check if there is the Intel E1000 Ethernet device in the list
if  grep $INTEL_8086_100f $PCI_DEVICE_LIST > $STD_NULL || \
	grep $INTEL_8086_1559 $PCI_DEVICE_LIST > $STD_NULL || \
	grep $INTEL_8086_1570 $PCI_DEVICE_LIST > $STD_NULL || \
	grep $INTEL_8086_15a3 $PCI_DEVICE_LIST > $STD_NULL || \
	grep $INTEL_8086_15a2 $PCI_DEVICE_LIST > $STD_NULL || \
	grep $INTEL_8086_1502 $PCI_DEVICE_LIST > $STD_NULL || \
	grep $INTEL_8086_1503 $PCI_DEVICE_LIST > $STD_NULL || \
	grep $INTEL_8086_10d3 $PCI_DEVICE_LIST > $STD_NULL || \
	grep $INTEL_8086_1f41 $PCI_DEVICE_LIST > $STD_NULL
then
	echo "Starting E1000 Ethernet driver ..."
	io-pkt-v6-hc -d e1000 name=en
	if_up -r 10 -p en0
	ifconfig en0 up	

#check if there is the Realtek RTL8169 Ethernet device in the list
elif grep $RTL_RTL8169 $PCI_DEVICE_LIST > $STD_NULL
then
	echo "Starting RTL8169 Ethernet driver ..."
	io-pkt-v6-hc -d rtl8169
	if_up -r 10 -p rt0
	ifconfig rt0 up

else
	echo "No Ethernet device has been detected"
	exit 0;

fi

	echo "Starting network service ..."
#	dhclient -nw
	qconn
	inetd
}
net-config.sh={
#!/bin/sh

STD_NULL=/dev/null
MACADDR=`ifconfig | grep address`

ADDR26C6=26:c6
ADDR24E1=24:e1
ADDR24E2=24:e2
ADDR24E3=24:e3
	
echo $MACADDR | grep $ADDR26C6
if [ $? -eq 0 ]
then
	#MAC:  00D0810926C6 Set both CAN interfaces for 250 kHz (500 kHz is C=0x00 c=0x1c)
	can_dual -k 8D8E2A0F401136E7B1E0C6A6 -B 0x01 -b 0x1c -C 0x01 -c 0x1c &
	/sbin/ifconfig en0 172.16.0.120 netmask 0xffff0000
	echo "Setting IP address to 172.16.0.120"
else
	echo $MACADDR | grep $ADDR24E1
	if [ $? -eq 0 ]
	then
		#MAC: 00D0810924E1 Set both CAN interfaces for 250 kHz (500 kHz is C=0x00 c=0x1c)
		can_dual -k D48E5F081273FE37210D57B9 -B 0x01 -b 0x1c -C 0x01 -c 0x1c &
		/sbin/ifconfig en0 172.16.0.121 netmask 0xffff0000
		echo "Setting IP address to 172.16.0.121"
else
	echo $MACADDR | grep $ADDR24E2
	if [ $? -eq 0 ]
	then
		#MAC: 00D0810924E2 Set both CAN interfaces for 250 kHz (500 kHz is C=0x00 c=0x1c)
		can_dual -k c1f91b2612f92389254b6d9f -B 0x01 -cb 0x1c -C 0x01 -c 0x1c &
		/sbin/ifconfig en0 172.16.0.122 netmask 0xffff0000
		echo "Setting IP address to 172.16.0.122"
else	
	echo $MACADDR | grep $ADDR24E3
	if [ $? -eq 0 ]
	then
		#MAC: 00D0810924E3 Set both CAN interfaces for 250 kHz (500 kHz is C=0x00 c=0x1c)
		can_dual -k 6E796FC05CE95D96132C2944 -B 0x01 -b 0x1c -C 0x01 -c 0x1c &
		/sbin/ifconfig en0 172.16.0.124 netmask 0xffff0000
		echo "Setting IP address to 172.16.0.124"
else
	echo "No MAC address detected"
		/sbin/ifconfig en0 172.16.0.125 netmask 0xffff0000
fi
fi
fi
fi
}

#---------------------------------------------------------------------------------------------------
# script for launching the audio driver
#---------------------------------------------------------------------------------------------------
aud-start.sh={
#!/bin/sh

PCI_DEVICE_LIST=/dev/shmem/pci_device.list
AUD_DEVICE=/dev/snd
STD_NULL=/dev/null

# supported list for the intel_hda audio devices
INTEL_HDA_ICH6=8086/2668
INTEL_HDA_ICH7=8086/27d8
INTEL_HDA_ICH8=8086/284b
INTEL_HDA_ICH9=8086/293e
INTEL_HDA_ICH10=8086/3a3e
INTEL_HDA_ICH10_82801JD=8086/3a6e
INTEL_HDA_POULSBO=8086/811b
INTEL_HDA_CPT=8086/1c20
INTEL_HDA_H77=8086/1e20
INTEL_HDA_HASWELL=8086/8c20
INTEL_HDA_3400=8086/3b56
INTEL_HDA_VALLYVIEW=8086/0f04
INTEL_HDA_LYNXPLPHD=8086/9c20
INTEL_HDA_WCPLPHD=8086/9ca0
INTEL_HDA_CHERRYHILL=8086/2284
INTEL_HDA_SUNRISEPLHD=8086/9d70
ATI_HDA_SB600=1002/4383
AMD_HDA_FCH=1022/780d

# supported list for the audiopci audio devices
ENSONIQ_1370=1274/5000
ENSONIQ_1371=1274/1371
ENSONIQ_5880=1274/5880
CREATIVE_EV1938=1102/8938

# uncomment the line below if any driver use the old PCI API's
export PCI_BKWD_COMPAT_MODULE=/lib/dll/pci/pci_bkwd_compat.so

#check if there is the pci device list
if [ ! -r $PCI_DEVICE_LIST ]; then
	echo "Get PCI device list ..."
	pci-tool -v > $PCI_DEVICE_LIST
fi

#check if there is Intel HD Audio device in the list
if grep $INTEL_HDA_ICH6          $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_ICH7          $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_ICH8          $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_ICH9          $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_ICH10         $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_ICH10_82801JD $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_POULSBO       $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_CPT           $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_H77           $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_HASWELL       $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_3400          $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_VALLYVIEW     $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_LYNXPLPHD     $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_WCPLPHD       $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_CHERRYHILL    $PCI_DEVICE_LIST > $STD_NULL || \
   grep $INTEL_HDA_SUNRISEPLHD   $PCI_DEVICE_LIST > $STD_NULL || \
   grep $AMD_HDA_FCH             $PCI_DEVICE_LIST > $STD_NULL || \
   grep $ATI_HDA_SB600           $PCI_DEVICE_LIST > $STD_NULL
then
	echo "Starting audio driver ..."
	io-audio -d intel_hda &

#check if there is audiopci device in the list
elif grep $ENSONIQ_1370          $PCI_DEVICE_LIST > $STD_NULL || \
     grep $ENSONIQ_1371          $PCI_DEVICE_LIST > $STD_NULL || \
     grep $ENSONIQ_5880          $PCI_DEVICE_LIST > $STD_NULL || \
     grep $CREATIVE_EV1938       $PCI_DEVICE_LIST > $STD_NULL
then
	echo "Starting audio driver ..."
	io-audio -d audiopci &

else
	echo "No audio device has been detected"
	exit 0;

fi

	waitfor $AUD_DEVICE
}

#---------------------------------------------------------------------------------------------------
# script for launching the block driver
#---------------------------------------------------------------------------------------------------
blk-start.sh={
#!/bin/sh

PCI_DEVICE_LIST=/dev/shmem/pci_device.list
# please change the device name below to the actull name of block device
BLK_DEVICE=/dev/hd0t179
BLK_DEVICE=/dev/hd1t179
STD_NULL=/dev/null

# supported list for the block devices
SATA_8086_0f23=8086/0f23
SATA_8086_9c03=8086/9c03
SATA_8086_9c83=8086/9c83
SATA_8086_9d03=8086/9d03
SATA_8086_1c02=8086/1c02
SATA_8086_1e03=8086/1e03
SATA_8086_1f22=8086/1f22
SATA_8086_1f32=8086/1f32
SATA_1022_7801=1022/7801
EIDE_8086_7111=8086/7111

# uncomment the line below if any driver use the old PCI API's
export PCI_BKWD_COMPAT_MODULE=/lib/dll/pci/pci_bkwd_compat.so

#check if there is the pci device list
if [ ! -r $PCI_DEVICE_LIST ]; then
	echo "Get PCI device list ..."
	pci-tool -v > $PCI_DEVICE_LIST
fi

#check if there is the SATA device in the list
if  grep $SATA_8086_0f23 $PCI_DEVICE_LIST > $STD_NULL || \
    grep $SATA_8086_9c03 $PCI_DEVICE_LIST > $STD_NULL || \
    grep $SATA_8086_9c83 $PCI_DEVICE_LIST > $STD_NULL || \
    grep $SATA_8086_9d03 $PCI_DEVICE_LIST > $STD_NULL || \
    grep $SATA_8086_1c02 $PCI_DEVICE_LIST > $STD_NULL || \
    grep $SATA_8086_1e03 $PCI_DEVICE_LIST > $STD_NULL || \
    grep $SATA_8086_1f22 $PCI_DEVICE_LIST > $STD_NULL || \
    grep $SATA_8086_1f32 $PCI_DEVICE_LIST > $STD_NULL || \
    grep $SATA_1022_7801 $PCI_DEVICE_LIST > $STD_NULL
then
	echo "Starting AHCI block driver ..."
#	devb-ahci cam quiet ahci nports=4 blk automount=hd1t179:/big:qnx6:mntperms=0777 &
	devb-ahci cam quiet ahci nports=4 blk automount=hd1t179:/:qnx6:mntperms=0777 &

#check if there is the EIDE device in the list
elif grep $EIDE_8086_7111 $PCI_DEVICE_LIST > $STD_NULL
then
	echo "Starting EIDE block driver ..."
	devb-eide cam quiet blk automount=hd0t179:/:qnx6 &

else
	echo "No block device has been detected"
	exit 0;

fi

	waitfor $BLK_DEVICE
}

#---------------------------------------------------------------------------------------------------
# .profile for setting environment for PCI, graphic, etc.
#---------------------------------------------------------------------------------------------------
/root/.profile={
# set PCI environment
export PCI_HW_MODULE=/lib/dll/pci/pci_hw-Intel_x86.so					## uncomment this line for Intel platform, comment out for other platform
#export PCI_HW_MODULE=/lib/dll/pci/pci_hw-AMD_x86.so					## uncomment this line for AMD platform, comment out for other platform
export PCI_BKWD_COMPAT_MODULE=/lib/dll/pci/pci_bkwd_compat.so			## uncomment this line if any driver use the old PCI API's
export PCI_SLOG_MODULE=/lib/dll/pci/pci_slog2.so
export PCI_DEBUG_MODULE=/lib/dll/pci/pci_debug2.so
export PCI_BASE_VERBOSITY=3
#export PCI_HW_CONFIG_FILE=/etc/system/config/pci/pci_hw-VMware.cfg		## uncomment this line for VMWare image, comment out for other platform

# set GRAPHICS environment
#export GRAPHICS_ROOT=/usr/lib/graphics/vmware							## uncomment this line for VMWare image, comment out for other platform

export LD_LIBRARY_PATH=/proc/boot:/lib:/usr/lib:/lib/dll:/lib/dll/pci:/x86_64/lib:/x86_64/usr/lib:/x86_64/lib/dll:$GRAPHICS_ROOT
export PATH=/sbin:/usr/sbin:/bin:/usr/bin:/proc/boot:/x86_64/sbin:/x86_64/usr/sbin:/x86_64/bin:/x86_64/usr/bin
}

#---------------------------------------------------------------------------------------------------
# PCI support
#---------------------------------------------------------------------------------------------------
pci-server
# Note: if you wish to use pci-tool interactive mode, add [+raw] to the pci-tool inclusion below
# see 'use' information in pci-tool
pci-tool
rsrcdb_query
[search=${QNX_TARGET}/etc/system/config/pci] /etc/system/config/pci/pcidatabase.com-tab_delimited.txt=pcidatabase.com-tab_delimited.txt
#[search=${QNX_TARGET}/etc/system/config/pci] /etc/system/config/pci/pci_hw-VMware.cfg=pci_hw-VMware.cfg

#---------------------------------------------------------------------------------------------------
# block driver
#---------------------------------------------------------------------------------------------------
devb-ahci
devb-eide

#---------------------------------------------------------------------------------------------------
# general commands
#---------------------------------------------------------------------------------------------------
ksh
waitfor
grep
/sbin/ifconfig=ifconfig
/usr/sbin/sshd=sshd

#Steinhoff driver
/usr/local/can_dual=can_dual
/usr/local/send=send
/usr/local/recv=recv

#Aboudy's code
/usr/local/bin/rd_j1939=rd_j1939
/usr/local/bin/translate_pdu=translate_pdu

/usr/bin/db_slv=db_slv
/usr/bin/trk_cr=trk_cr
/usr/bin/can_man=can_man
/usr/bin/rdj1939=rdj1939
/usr/bin/jbussend=jbussend
/usr/bin/long_trk=long_trk

#---------------------------------------------------------------------------------------------------
# Network services (telnet) support
#---------------------------------------------------------------------------------------------------
devc-pty

/etc/hosts=${QNX_TARGET}/etc/hosts
/etc/services=${QNX_TARGET}/etc/services

/etc/inetd.conf = {
ftp        stream tcp nowait root  /usr/sbin/ftpd           in.ftpd -l
telnet     stream tcp nowait root  /usr/sbin/telnetd        in.telnetd
}

/etc/ftpusers=${QNX_TARGET}/etc/ftpusers

/etc/ftpd.conf = {
/* Make things a+rw by default */
umask all 0000
}

[uid=0 gid=0 perms=0744] /etc/rc.d/rc.local = {
#!/bin/sh

/usr/sbin/sshd -D &
/bin/stty baud=19200 raw </dev/ser1
gpssetdate.sh &
}
/etc/ssh/sshd_config = ${QNX_TARGET}/etc/ssh/sshd_config
/etc/ssh/sshd_config = ${QNX_TARGET}/etc/ssh/ssh_config
/etc/ssh/ssh_host_rsa_key = ${QNX_TARGET}/etc/ssh/ssh_host_rsa_key
/etc/ssh/ssh_host_dsa_key = ${QNX_TARGET}/etc/ssh/ssh_host_dsa_key
/etc/ssh/ssh_host_ecdsa_key = ${QNX_TARGET}/etc/ssh/ssh_host_ecdsa_key
/etc/ssh/ssh_host_ed25519_key = ${QNX_TARGET}/etc/ssh/ssh_host_ed25519_key
/etc/ssh/ssh_host_rsa_key.pub = ${QNX_TARGET}/etc/ssh/ssh_host_rsa_key.pub
/etc/ssh/ssh_host_dsa_key.pub = ${QNX_TARGET}/etc/ssh/ssh_host_dsa_key.pub
/etc/ssh/ssh_host_ecdsa_key.pub = ${QNX_TARGET}/etc/ssh/ssh_host_ecdsa_key.pub
/etc/ssh/ssh_host_ed25519_key.pub = ${QNX_TARGET}/etc/ssh/ssh_host_ed25519_key.pub

[uid=0 gid=0 perms=0644] /etc/passwd = {
root:x:0:0:Superuser:/root:/bin/sh
sshd:x:15:6:sshd:/var/chroot/sshd:/bin/false
qnxuser:x:1000:1000:"QNX User":/home/qnxuser:/bin/sh
jspring:x:100:100:"John Spring":/home/jspring:/bin/sh
}

# Enabled Username/Password: root/root, qnxuser/qnxuser
[uid=0 gid=0 perms=0600] /etc/shadow = {
root:@S@NKlWES1quMp1wmqugkUSnFEpPGn58kIs4wQOgDDNs06vimR+bbGPUKM+9P6jbFUzo3Rm+Qe5MS+17xKhwaeJEg==@Mjg5ZTJiMTM0YTRjYTE2ZGFjMDdhZTFlY2NlMDVmNmE=:1468494669:0:0
sshd:*:1231323780:0:0
qnxuser:@S@HZERXjgixvb3157FFeraShhvTVw+10ccUtVUVZbi0fUwpzlzBZFw5gHiFd1XHKit8D39Whe749XAY8fV4P5ANQ==@Y2ZlOTg3M2RhNTM4Y2M2ODY0OWZhODdiNDRkMmU5Nzg=:1468488235:0:0
jspring:$6$EOwBXkh5$QRqaIxtbAUXN/G8UXvnfD6jabv5D6EDoDL14YwRecsZkDq7sbDEm9/O0RAcm1rPbLNYcIUmMDoIrYGicPuZEL/:18088:0:99999:7:::
}

[uid=0 gid=0 perms=0644] /etc/group = {
root:x:0:root
sshd:x:6:
qnxuser:x:qnxuser
users:x:100:jspring,aboudy
}

#---------------------------------------------------------------------------------------------------
## PAM configurations addon build file
#---------------------------------------------------------------------------------------------------
[uid=0 gid=0 perms=4755] /bin/login=login
[uid=0 gid=0 perms=4755] /bin/passwd=passwd
[uid=0 gid=0 perms=4755] /bin/su=su
[uid=0 gid=0 perms=0755] /usr/sbin/sshd=sshd
[uid=0 gid=0 perms=0755] /usr/sbin/ftpd=ftpd
[uid=0 gid=0 perms=0755] /usr/sbin/inetd=inetd
[uid=0 gid=0 perms=0755] /usr/sbin/telnetd=telnetd

[uid=0 gid=0 type=dir dperms=0755] /usr
[uid=0 gid=0 type=dir dperms=0755] /usr/lib
[uid=0 gid=0 type=dir dperms=0755] /etc
[uid=0 gid=0 type=dir dperms=0755] /etc/pam.d
[uid=0 gid=0 perms=0644] /etc/pam.d/login=${QNX_TARGET}/etc/pam.d/login
[uid=0 gid=0 perms=0644] /etc/pam.d/on=${QNX_TARGET}/etc/pam.d/on
[uid=0 gid=0 perms=0644] /etc/pam.d/passwd=${QNX_TARGET}/etc/pam.d/passwd
[uid=0 gid=0 perms=0644] /etc/pam.d/su=${QNX_TARGET}/etc/pam.d/su
[uid=0 gid=0 perms=0644] /etc/pam.d/ftpd=${QNX_TARGET}/etc/pam.d/ftpd

[uid=0 gid=0 perms=0755] /usr/lib/pam_ftpusers.so=pam_ftpusers.so
[uid=0 gid=0 perms=0755] /usr/lib/pam_rootok.so=pam_rootok.so
[uid=0 gid=0 perms=0755] /usr/lib/pam_qnx.so=pam_qnx.so
#[uid=0 gid=0 perms=0755] /usr/lib/pam_deny.so=pam_deny.so
#[uid=0 gid=0 perms=0755] /usr/lib/pam_echo.so=pam_echo.so
#[uid=0 gid=0 perms=0755] /usr/lib/pam_exec.so=pam_exec.so
#[uid=0 gid=0 perms=0755] /usr/lib/pam_group.so=pam_group.so
#[uid=0 gid=0 perms=0755] /usr/lib/pam_mac.so=pam_mac.so
#[uid=0 gid=0 perms=0755] /usr/lib/pam_permit.so=pam_permit.so
#[uid=0 gid=0 perms=0755] /usr/lib/pam_radius.so=pam_radius.so
#[uid=0 gid=0 perms=0755] /usr/lib/pam_self.so=pam_self.so

#---------------------------------------------------------------------------------------------------
# serial drivers
#---------------------------------------------------------------------------------------------------
devc-con
devc-con-hid
devc-ser8250
devc-serusb

#---------------------------------------------------------------------------------------------------
# audio driver and support
#---------------------------------------------------------------------------------------------------
io-audio
wave
waverec
mix_ctl

#---------------------------------------------------------------------------------------------------
# network driver and support
#---------------------------------------------------------------------------------------------------
io-pkt-v6-hc
nicinfo
if_up
ftp
ping
ping6
fs-nfs3
qconn
#dhclient
#[search=${QNX_TARGET}/sbin perms=a+x] /sbin/dhclient-script=dhclient-script
#[search=${QNX_TARGET}/etc] /etc/dhclient.conf=dhclient.conf
#---------------------------------------------------------------------------------------------------
# USB driver and support
#---------------------------------------------------------------------------------------------------
io-usb-otg
usb
devb-umass
io-hid

#---------------------------------------------------------------------------------------------------
# more general commands
#---------------------------------------------------------------------------------------------------
on
cat
cp
mkdir
ls
pipe
mqueue
random
pidin
rm
uname
slogger2
slog2info
slay
mount
umount
shutdown
less
rtc
date
fdisk
use
dumper
env
find
ln
sleep
tty
sync
coreinfo
mkqnx6fs
dd
dloader
pdebug
ps
mv
du
df
ssh
ssh-keygen
sshd
scp
ldd
hostname
can_dual
send
recv
hhl
translate_pdu
which
elvis
chmod
chown
chgrp
top
touch
tail
stty
gawk
uniq

#CACC programs
can_man
db_slv
dvi_rcv
dvi_snd
gpsdb
jbussend
jbussendGPS
long_trk
rdj1939
trk_cr
veh_rcv
veh_snd
pps
sed
nc

gpssetdate
run_gpssetdate.sh
#---------------------------------------------------------------------------------------------------
# For x86 32bits compatibility (this feature is experimental!)
#---------------------------------------------------------------------------------------------------
[search=${QNX_TARGET}/x86/lib] /x86/lib/libc.so=libc.so
